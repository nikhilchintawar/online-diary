{"version":3,"sources":["reportWebVitals.js","component/custom-button/CustomButton.js","component/form-input/FormInput.js","component/update-note/UpdateNote.js","component/create-note/CreateNote.js","component/note/Note.js","component/header/Header.js","component/select-option/SelectOption.js","component/home/Home.js","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CustomButton","children","otherProps","className","FormInput","type","withRouter","match","useState","JSON","parse","localStorage","getItem","notes","setNotes","redirect","setRedirect","title","content","date","note","setNote","useEffect","noteId","requiredNote","find","index","parseInt","preload","params","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","onClick","newNote","prevNotes","splice","setItem","stringify","preventDefault","to","CreateNote","addNote","isExpanded","setExpanded","Note","id","deleteNote","updateNote","Header","SelectOption","sortType","map","label","Home","setValue","split","sortYear","yearValue","setYearValue","sortMonth","monthValue","setMonthValue","filter","sort","note1","note2","Routes","exact","path","component","UpdateNote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8182f8f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./custom-button.css\";\n\nconst CustomButton = ({\n  children,\n  ...otherProps\n}) => (\n  <button\n    className=\"custom-button\"\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;","import \"./forminput.css\";\n\nconst FormInput = ({type, ...otherProps}) => {\n    return (\n        <input \n          type={type}\n          className=\"form-input\"\n          {...otherProps}\n        />\n    );\n};\n\nexport default FormInput;","import { useState, useEffect } from \"react\";\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../form-input/FormInput\";\n\nconst UpdateNote = ({match}) => {\n    const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n    const [redirect, setRedirect] = useState(false);\n\n    const [note, setNote] = useState({\n      title: \"\",\n      content: \"\",\n      date: \"\"\n  });\n  \n  useEffect(() => {\n    const preload = (noteId) => {\n        let requiredNote = notes.find((note, index) => parseInt(noteId) === index)\n        setNote({title: requiredNote.title, content: requiredNote.content, date: requiredNote.date})\n      }\n    preload(match.params.noteId)\n  },[match.params.noteId, notes])\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  const updateNote = (newNote) => {\n    setNotes(prevNotes => {\n      prevNotes.splice(match.params.noteId, 1, newNote)\n      localStorage.setItem(\"notes\", JSON.stringify([...prevNotes]))\n      return [...prevNotes];\n    });   \n  }\n\n  const submitNote = (event) => {\n   updateNote(note)\n   setRedirect(!redirect)\n   setNote({\n      title: \"\",\n      content: \"\",\n      date: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n          <FormInput\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder={note.title}\n          />\n          <FormInput \n            type=\"date\" \n            name=\"date\" \n            onChange={handleChange}\n            value={note.date}\n            />\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows= \"3\"\n          \n        />\n        <CustomButton onClick={submitNote}>SUBMIT</CustomButton>\n        {redirect ? <Redirect to=\"/\" />: \"\"}\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(UpdateNote);","import \"./create-note.css\";\nimport { useState } from \"react\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport FormInput from \"../form-input/FormInput\";\n\n\nconst CreateNote = ({addNote}) => {\n    const [isExpanded, setExpanded] = useState(false);\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\",\n        date: \"\"\n    });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  const submitNote = (event) => {\n    addNote(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n      date: \"\"\n    });\n    event.preventDefault();\n  }\n\n  const expand = () => {\n    setExpanded(true);\n  }\n\n\n  return (\n    <div className=\"create-note-form\">\n      <form className=\"create-note\">\n        {isExpanded && (\n        <div className=\"form-input\">\n          <FormInput\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n          <FormInput\n            type=\"date\" \n            name=\"date\" \n            onChange={handleChange}\n            value={note.date}\n            placeholder={note.date}\n            />\n        </div>\n        )}\n\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n      {\n        isExpanded && <CustomButton onClick={submitNote} children=\"ADD\" />\n      }\n      </form>\n      \n    </div>\n  );\n};\n\nexport default CreateNote;","import \"./note.css\";\nimport { Link } from \"react-router-dom\"\nimport CustomButton from \"./../custom-button/CustomButton\";\n\nconst Note = ({id, title, content, date, deleteNote, updateNote}) => {\n    return (\n        <div className=\"note\">\n            <header>\n                <h1>{title}</h1>\n                <span>{date}</span>\n            </header>\n            <p>{content}</p>\n\n            <div className=\"note-buttons\">\n                <CustomButton onClick={() => deleteNote(id)}>Delete</CustomButton>\n                <Link to={`/update/${id}`}>\n                    <CustomButton onClick={() => updateNote(id)}>\n                        edit\n                    </CustomButton>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Note;","import \"./header.css\";\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n           <h1>Online Diary</h1> \n        </div>\n    );\n};\n\nexport default Header;","import \"./SelectOption.css\";\n\nconst SelectOption = ({value, sortType, ...otherProps}) => {\n    return (\n        <select value={value} {...otherProps}>\n            {\n                sortType.map(({value, label}) => <option value={value} key={value}>{label}</option>)\n            }\n        </select>\n    );\n};\n\nexport default SelectOption;","import './home.css';\n\nimport CreateNote from '../create-note/CreateNote';\nimport {useState } from 'react';\nimport Note from '../note/Note';\nimport UpdateNote from '../update-note/UpdateNote';\nimport Header from '../header/Header';\nimport SelectOption from '../select-option/SelectOption';\n\nconst Home = () => {\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n  const [sortType] = useState([\n        { value:\"NEW\", label: \"NEWEST FIRST\"}, \n        { value:\"OLD\", label: \"OLDEST FIRST\"}]);\n  const [value, setValue] = useState(\"NEW\");\n\n  const [sortYear] = useState(notes.map(note => note.date.split(\"-\")[0]));\n  const [yearValue, setYearValue] = useState(\"Choose Year\");\n\n  const [sortMonth] = useState([\n        {value: '01', label: \"Jan\"}, \n        {value: '02', label:\"Feb\"}, \n        {value: '03', label: \"Mar\"}, \n        {value: '04', label: \"Apr\"}, \n        {value: '05', label:\"May\"}, \n        {value: '06', label: \"Jun\"}, \n        {value: '07', label: \"Jul\"}, \n        {value: '08', label:\"Aug\"}, \n        {value: '09', label: \"Sep\"}, \n        {value: '10', label:\"Oct\"}, \n        {value: '11', label:\"Nov\"}, \n        {value: '12', label: \"Dec\"}]);\n  const [monthValue, setMonthValue] = useState(\"month\");\n\n  const addNote = (newNote) => {\n    setNotes(prevNotes => {\n      localStorage.setItem(\"notes\", JSON.stringify([...prevNotes, newNote]))\n      return [...prevNotes, newNote];\n    });\n  }\n\n  const deleteNote = (id) => {\n   setNotes(prevNotes => {\n    return prevNotes.filter((note, index) => index !== id)\n    });\n  }\n\n  const updateNote = (id) => {\n    notes.map((note, index) => {\n      if(id === index){\n        return <UpdateNote id={id} />\n      }else{\n        return \"note is not available.\"\n      }\n    })\n  }\n\n\n  const handleChange = event => {\n    setValue(event.target.value)\n    if(value === \"NEW\"){\n      notes.sort((note1, note2) => {\n        return note1.date > note2.date ? 1 : -1;\n      })\n    }else if(value===\"OLD\"){\n      notes.sort((note1, note2) => {\n        return note2.date > note1.date ? 1 : -1;\n      })\n    }\n  }\n\n\n  const handleMonthChange = (event) => {\n    setNotes(JSON.parse(localStorage.getItem(\"notes\")) || [])\n    setMonthValue(event.target.value);\n    setNotes(prevNotes => (\n        prevNotes.filter(note => ( note.date.split(\"-\")[1] === event.target.value))\n    ))\n  }\n\n  const handleYearChange = (event) => {\n        setNotes(JSON.parse(localStorage.getItem(\"notes\")) || [])\n        setYearValue(event.target.value)\n        setNotes(prevNotes => (\n            prevNotes.filter(note => note.date.split(\"-\")[0] === event.target.value)\n        ))\n  }\n\n\n  return (\n    <div className=\"App\">\n        <Header />\n        <CreateNote addNote={addNote} />\n\n        <div className=\"select-options\">\n            <SelectOption\n                value={value}\n                onChange={handleChange}\n                sortType={sortType}\n            />\n            <select value={yearValue} onChange={handleYearChange}>\n                {\n                    sortYear.map((value, index) => <option value={value} key={index}>{value}</option>)\n                }\n            </select>\n            <SelectOption\n                value={monthValue}\n                onChange={handleMonthChange}\n                sortType={sortMonth}\n            />\n        </div>\n\n        <div className=\"all-notes\">\n          {\n            notes.map((note, index) => {          \n            return (\n              <Note\n                key={index}\n                id={index}\n                title={note.title}\n                content={note.content}\n                date={note.date}\n                deleteNote={deleteNote}\n                updateNote={updateNote}\n              />\n            )})\n          }\n        </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Switch, Route } from \"react-router-dom\"\nimport UpdateNote from \"./component/update-note/UpdateNote\"\nimport Home from \"./component/home/Home\";\n\nconst Routes = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/update/:noteId\" component={UpdateNote} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Routes />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}